name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: pnpm

      - name: Create .env file
        run: |
          cat > .env << 'EOF'
          ${{ secrets.ENV_FILE }}
          EOF

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Generate Prisma client
        run: pnpm run db:generate

      - name: Build project
        run: pnpm run build

      - name: Install sshpass for password authentication
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Add known hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to server
        env:
          SSHPASS: ${{ secrets.SSH_PASSWORD }}
        run: |
          # Create deployment package
          sshpass -e rsync -avz --delete \
            --exclude 'node_modules' \
            --exclude '.git' \
            --exclude '.nuxt' \
            --exclude 'prisma/dev.db' \
            --exclude 'public/uploads' \
            -e "ssh -p ${{ secrets.SSH_PORT || 22 }}" \
            .output/ \
            ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/var/www/nuxt_social/.output/

      - name: Transfer additional files
        env:
          SSHPASS: ${{ secrets.SSH_PASSWORD }}
        run: |
          sshpass -e rsync -avz \
            -e "ssh -p ${{ secrets.SSH_PORT || 22 }}" \
            package.json \
            pnpm-lock.yaml \
            prisma/ \
            ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/var/www/nuxt_social/

      - name: Complete deployment and restart service
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script: |
            cd /var/www/nuxt_social

            # Create .env file from secrets
            cat > .env << 'EOF'
            ${{ secrets.ENV_FILE }}
            EOF

            # Install production dependencies only
            pnpm install --prod --no-frozen-lockfile

            # Run database migrations
            pnpm run db:generate
            pnpm run db:migrate

            # Restart the service
            sudo service Social restart

            echo "âœ… Deployment completed successfully!"
